#BlueJ class context
comment0.target=Ver1WaterWoes
comment1.params=e
comment1.target=void\ mouseExited(java.awt.event.MouseEvent)
comment10.params=
comment10.target=Ver1WaterWoes()
comment10.text=\r\n\ \ \ \ public\ void\ gridGeneration()\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ int[][]\ Grid\ \=\ new\ int[GRIDSIZE][GRIDSIZE];\ \r\n\ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ for\ (int\ x\=0;x<GRIDSIZE;x++)\ //Sets\ the\ grid\ as\ off\ by\ default\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ y\=0;y<GRIDSIZE;y++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Grid[x][y]\ \=\ 1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.println("Welcome\ To\ Conways\ Game\ Of\ Life");\ //Instructions\r\n\ \ \ \ \ \ \ \ while\ (StartScreen)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Type\ 'guide'\ To\ Be\ Given\ Instructions");\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Type\ 'start'\ To\ Begin\ The\ Game");\r\n\ \ \ \ \ \ \ \ \ \ \ \ keyboard\ \=\ new\ Scanner(System.in);\r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ answer\=keyboard.nextLine();\r\n\ \ \ \ \ \ \ \ \ \ \ \ answer\ \=\ answer.toLowerCase();\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (answer.equals("start"))\ StartScreen\ \=\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (answer.equals("guide"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Conways\ Game\ Of\ Life\ Rules\:");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("A\ live\ cell\ dies\ if\ it\ has\ fewer\ than\ two\ live\ neighbors.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("A\ live\ cell\ with\ two\ or\ three\ live\ neighbors\ lives\ on\ to\ the\ next\ generation.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("A\ live\ cell\ with\ more\ than\ three\ live\ neighbors\ dies.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("A\ dead\ cell\ will\ be\ brought\ back\ to\ live\ if\ it\ has\ exactly\ three\ live\ neighbors.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("o\ \=\ dead\ cell\ \ \ x\ \=\ live\ cell");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ //\ Invalid\ input\ checker\r\n\ \ \ \ \ \ \ \ \ \ \ \ else\ System.out.println("Sorry\ your\ input\ was\ invalid");\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ while\ (GridGenerating)\ {\ //Generates\ (prints)\ the\ grid\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ x\=0;x<GRIDSIZE;x++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ y\=0;y<GRIDSIZE;y++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (Grid[x][y]\ \=\=\ 1)\ System.out.print("o\ ");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (Grid[x][y]\ \=\=\ 2)\ System.out.print("x\ ");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Give\ me\ 2\ positions\ between\ 1\ &\ 25\ seperated\ by\ a\ comma");\ //Instructions\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("If\ you\ are\ done\ type\ 'done'");\ //Instructions\r\n\ \ \ \ \ \ \ \ \ \ \ \ keyboard\ \=\ new\ Scanner(System.in);\r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ doneCheck\ \=\ keyboard.nextLine().toLowerCase();\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (doneCheck.equals("done"))\ GridGenerating\ \=\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String[]\ nums\=doneCheck.split(",");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (nums.length\=\=2)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (validInput(nums[0])\ &&\ validInput(nums[1]))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ N1\ \=\ Integer.parseInt(nums[0])-1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ N2\ \=\ Integer.parseInt(nums[1])-1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Grid[N1][N2]\ \=\ 2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Sorry\ you\ have\ made\ an\ invalid\ input,\ Make\ sure\ you\ give\ me\ 2\ positions\ between\ 1\ &\ 25\ seperated\ by\ a\ comma");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Sorry\ you\ have\ made\ an\ invalid\ input,\ Make\ sure\ you\ give\ me\ 2\ positions\ between\ 1\ &\ 25\ seperated\ by\ a\ comma");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.print('\f');\r\n\ \ \ \ \ \ \ \ System.out.println("How\ many\ generations\ do\ you\ want\ the\ game\ to\ run\ for?");\ //Instructions\r\n\ \ \ \ \ \ \ \ keyboard\ \=\ new\ Scanner(System.in);\r\n\ \ \ \ \ \ \ \ while\ (true)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (\!keyboard.hasNextInt())\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ keyboard.nextLine();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Please\ input\ a\ number\!");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ inputNumber\ \=\ keyboard.nextInt();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (inputNumber\ <\ 0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ keyboard.nextLine();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Please\ input\ a\ positive\ number\!");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ final\ int\ GENERATIONS\ \=\ inputNumber;\r\n\ \ \ \ \ \ \ \ int[][][]\ GridGen\ \=\ new\ int[GENERATIONS+1][GRIDSIZE][GRIDSIZE];\ \r\n\ \ \ \ \ \ \ \ int\ livecells\ \=\ 0;\r\n\ \ \ \ \ \ \ \ for\ (int\ x\=0;x<GRIDSIZE;x++)\ {\ //\ This\ is\ for\ the\ users\ planning\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ y\=0;y<GRIDSIZE;y++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (Grid[x][y]\ \=\=\ 1)\ GridGen[0][x][y]\ \=\ 1\ ;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (Grid[x][y]\ \=\=\ 2)\ GridGen[0][x][y]\ \=\ 2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ for\ (int\ g\=0;g<GENERATIONS;g++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Generation\ "+(g+1));\ //Displays\ what\ generation\ we\ are\ on\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ x\=0;x<GRIDSIZE;x++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ y\=0;y<GRIDSIZE;y++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ livecells\ \=\ 0;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (x\=\=0\ &&\ y\=\=0)\ {\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (x\=\=GRIDSIZE-1\ &&\ y\=\=GRIDSIZE-1)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (x\=\=GRIDSIZE-1\ &&\ y\=\=0)\ {\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (x\=\=0\ &&\ y\=\=GRIDSIZE-1)\ {\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Right\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (x\=\=0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (y\=\=0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Right\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (x\=\=GRIDSIZE-1)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (y\=\=GRIDSIZE-1)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Top\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y-1]\ \=\=\ 2)\ livecells++;\ //Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y]\ \=\=\ 2)\ livecells++;\ //Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x-1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Left\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //if\ (GridGen[g][x][y]\ \=\=\ 2)\ livecells++;\ This\ is\ the\ cell\ being\ checked\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y-1]\ \=\=\ 2)\ livecells++;\ //Top\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y+1]\ \=\=\ 2)\ livecells++;\ //Bottom\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y]\ \=\=\ 2)\ livecells++;\ //Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x+1][y-1]\ \=\=\ 2)\ livecells++;\ //Top\ Right\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //\ Setup\ next\ generation\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y]\ \=\=\ 2\ &&\ livecells\ <\ 2)\ GridGen[g+1][x][y]\ \=\ 1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (GridGen[g][x][y]\ \=\=\ 2\ &&\ livecells\ \=\=\ 2)\ GridGen[g+1][x][y]\ \=\ 2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (GridGen[g][x][y]\ \=\=\ 2\ &&\ livecells\ \=\=\ 3)\ GridGen[g+1][x][y]\ \=\ 2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (GridGen[g][x][y]\ \=\=\ 2\ &&\ livecells\ >\ 3)\ GridGen[g+1][x][y]\ \=\ 1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (GridGen[g][x][y]\ \=\=\ 1\ &&\ livecells\ \=\=\ 3)\ GridGen[g+1][x][y]\ \=\ 2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ GridGen[g+1][x][y]\ \=\ 1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //\ Display\ grid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (GridGen[g][x][y]\ \=\=\ 1)\ System.out.print("o\ ");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ if\ (GridGen[g][x][y]\ \=\=\ 2)\ System.out.print("x\ ");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\ System.out.print("e\ ");\ //Error\ Diagnosis\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ //This\ adds\ distance\ between\ the\ grids\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("");\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n
comment2.params=e
comment2.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.params=e
comment3.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mousePressed(java.awt.event.MouseEvent)
comment5.params=e
comment5.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.params=g
comment6.target=void\ paint(java.awt.Graphics)
comment7.params=
comment7.target=void\ createDialog()
comment8.params=g
comment8.target=void\ createWaterSource(java.awt.Graphics)
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
numComments=11
